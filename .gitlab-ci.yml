########################
##GLOBAL VARIABLES
########################
variables:
  ###### COMMON CONFIGS ######
  # GIT CONFIG
  GIT_DEPTH: 5
  GIT_OPTIONS: "--allow-unrelated-histories"
  ## BUILD CONFIGS ##
  # MAVEN CONFIG
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  #Â @see : https://books.sonatype.com/mvnref-book/reference/running-sect-options.html
  # --batch-mode Run in non-interactive (batch) mode
  # --show-version : Display version information WITHOUT stopping build
  # -c : lax checksums
  MAVEN_CLI_OPTS: "--batch-mode --show-version -c"
  MAVEN_CACHE_FOLDER: "$CI_PROJECT_DIR/.m2/repository"
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # DEFAULT SERVER MAVEN VERSION
  MVN_VERSION: 3.6.3
  # DEFAULT SERVER JAVA VERSION
  JAVA_VERSION: 11
  ## DEPLOY CONFIGS ##
  # REMOTE SERVER CONFIG
  RSYNC_INSTANCES_OPTIONS: "--progress --delete"
  RSYNC_INSTANCES_BIN_PATH: "~/opensilex-instances/bin"
  RSYNC_INSTANCES_DATA_PATH: "~/opensilex-instances/data"
  RSYNC_INSTANCES_LOGS_PATH: "~/opensilex-instances/logs"
  RSYNC_INSTANCES_LOGS_ARCHIVED: "~/opensilex-instances/logs/old"
  ###### OPENSILEX ######
  #APP BUILD CONFIG
  OPENSILEX_APP_REVISION: "INSTANCE-SNAPSHOT"
  OPENSILEX_BUILD_PATH: "opensilex-release/target"
  #APP DEPLOY CONFIG
  DEV_TOOLS_REPO_CONF_FILES_PATH: "instances-configuration"
  OPENSILEX_STOP_SERVER_OPTS: "server stop --CONFIG_FILE=$INSTANCE_CONFIGURATION_FILE_NAME"
  OPENSILEX_START_SERVER_OPTS: "server start --CONFIG_FILE=$INSTANCE_CONFIGURATION_FILE_NAME --DEBUG -d"
  OPENSILEX_RESET_ONTOLOGIES_OPTS: "sparql reset-ontologies --DEBUG"
  OPENSILEX_CONFIG_SERVER_OPTS: "--CONFIG_FILE=$INSTANCE_CONFIGURATION_FILE_NAME"

  OPENSILEX_JAVA_EXEC_OPTS: java -jar
  # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  #CACHE
  YARN_CACHE_FOLDER: "$CI_PROJECT_DIR/cache_yarn"
  NODE_CACHE: "$CI_PROJECT_DIR/.node"
  #EMBDED_MONGO_CACHE: "/root/.embedmongo/"
  # Prevent gitlab clone issues
  GITLAB_HTTPS: "false"

########################
##  CACHE TEMPLATE
########################

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_BUILD_JOB_NAME"'
.cache_dependencies: &cache_dependencies
  cache:
    key: "${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}"
    paths:
      - $YARN_CACHE_FOLDER
      - $MAVEN_CACHE_FOLDER

########################
##  BUILD TEMPLATE
########################

.build:instance: &build_template_with_opensilex
  <<: *cache_dependencies
  before_script:
    - if [ -z "$OPENSILEX_BUILD_PATH" ]; then echo "Missing OPENSILEX_BUILD_PATH variable"; exit 1; fi
    - if [ -z "$OPENSILEX_APP_REVISION" ]; then echo "Missing OPENSILEX_APP_REVISION variable"; exit 1; fi
    - |
      if [ ! -z "$COMMIT_SHA_OPENSILEX_DEV" ]; then
        git checkout $COMMIT_SHA_OPENSILEX_DEV
      fi
  stage: build
  image: maven:$MVN_VERSION-jdk-$JAVA_VERSION
  script:
    - mvn clean install $MAVEN_CLI_OPTS -Drevision=$OPENSILEX_APP_REVISION
    - ls $OPENSILEX_BUILD_PATH/opensilex-release-$OPENSILEX_APP_REVISION
    - mv $OPENSILEX_BUILD_PATH/opensilex-release-$OPENSILEX_APP_REVISION $OPENSILEX_APP_REVISION
  artifacts:
    paths:
      - $OPENSILEX_APP_REVISION
    expire_in: "3 week"

########################
##  DEPLOY SSH CONFIGURATION TEMPLATE
########################
.deploy_opensilex_before_script: &deploy_opensilex_before_script
  before_script:
    # test variables before deployement
    - if [ -z "$REMOTE_SERVER_RSYNC_ACCOUNT" ]; then echo "Missing REMOTE_SERVER_RSYNC_ACCOUNT variable"; exit 1; fi
    - if [ -z "$REMOTE_SERVER_RSYNC_DIR" ]; then echo "Missing REMOTE_SERVER_RSYNC_DIR variable"; exit 1; fi
    - if [ -z "$REMOTE_SERVER_IP" ]; then echo "Missing REMOTE_SERVER_IP variable"; exit 1; fi
    - if [ -z "$CONFIGS_FILES_DIR_PATH" ]; then echo "Missing CONFIGS_FILES_DIR_PATH variable"; exit 1; fi
    - if [ -z "$INSTANCE_CONFIGURATION_FILE_NAME" ]; then echo "Missing INSTANCE_CONFIGURATION_FILE_NAME variable"; exit 1; fi
    - if [ -z "$REMOTE_SERVER_SSH_KEY" ]; then echo "Missing REMOTE_SERVER_SSH_KEY variable"; exit 1; fi
    - if [ -z "$OPENSILEX_JAR_ADMIN_PORT" ]; then echo "Missing OPENSILEX_JAR_ADMIN_PORT variable"; exit 1; fi
    - if [ -z "$OPENSILEX_JAR_PORT" ]; then echo "Missing OPENSILEX_JAR_PORT variable"; exit 1; fi
    ##
    ## Create the SSH directory and give it the right permissions
    ##
    - echo "$REMOTE_SERVER_IP"
    - mkdir -p ${HOME}/.ssh
    - chmod 700 ${HOME}/.ssh
    ##
    ## Install ssh-agent if not already installed, it is required by Docker.
    ## (change apt-get to yum if you use an RPM-based image)
    ##
    - "which ssh-agent || ( apt-get update && apt-get install openssh-client -y )"
    ##
    ## Run ssh-agent (inside the build environment)
    ##
    - eval $(ssh-agent -s)
    ##
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work
    ## without extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    ##
    - mkdir -p ${HOME}/.ssh && touch ${HOME}/.ssh/known_hosts
    - ssh-keyscan -H "$REMOTE_SERVER_IP" >> ${HOME}/.ssh/known_hosts
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ${HOME}/.ssh/config
    - echo "$REMOTE_SERVER_SSH_KEY" >> ${HOME}/.ssh/id_rsa
    - chmod 600 ${HOME}/.ssh/id_rsa

########################
##  DEPLOY OPENSILEX TEST TEMPLATE
########################

.deploy:opensilex:instance: &deploy_opensilex_template
  stage: deploy
  image: instrumentisto/rsync-ssh
  script:
    - apk add curl git
    - rm -R $CI_PROJECT_DIR/opensilex-dev-tools
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@forgemia.inra.fr/OpenSILEX/opensilex-dev-tools.git --branch master $CI_PROJECT_DIR/opensilex-dev-tools
    - ls $CI_PROJECT_DIR/opensilex-dev-tools
    # Directory details
    - ls $CI_PROJECT_DIR/$OPENSILEX_APP_REVISION
    - echo "Create directory ${RSYNC_INSTANCES_BIN_PATH}/${REMOTE_SERVER_RSYNC_DIR}"
    - echo "Create directory ${RSYNC_INSTANCES_DATA_PATH}/${REMOTE_SERVER_RSYNC_DIR}"
    - echo "Create directory ${RSYNC_INSTANCES_LOGS_PATH}"
    - echo "Create directory ${RSYNC_INSTANCES_LOGS_ARCHIVED}"
    - ssh -i ${HOME}/.ssh/id_rsa -p22 $REMOTE_SERVER_RSYNC_ACCOUNT@$REMOTE_SERVER_IP "mkdir -p $RSYNC_INSTANCES_BIN_PATH/$REMOTE_SERVER_RSYNC_DIR; mkdir -p $RSYNC_INSTANCES_LOGS_PATH; mkdir -p $RSYNC_INSTANCES_LOGS_ARCHIVED; mkdir -p $RSYNC_INSTANCES_DATA_PATH/$REMOTE_SERVER_RSYNC_DIR;"
    - echo "Upload files"
    - rsync -arzv -e "ssh  -i ${HOME}/.ssh/id_rsa" $RSYNC_INSTANCES_OPTIONS  $CI_PROJECT_DIR/$OPENSILEX_APP_REVISION/* $REMOTE_SERVER_RSYNC_ACCOUNT@$REMOTE_SERVER_IP:$RSYNC_INSTANCES_BIN_PATH/$REMOTE_SERVER_RSYNC_DIR
    - ls $CI_PROJECT_DIR/opensilex-dev-tools/$CONFIGS_FILES_DIR_PATH
    - echo "scp -i ${HOME}/.ssh/id_rsa -o 'StrictHostKeyChecking no' $CI_PROJECT_DIR/opensilex-dev-tools/$CONFIGS_FILES_DIR_PATH/* ${REMOTE_SERVER_RSYNC_ACCOUNT}@${REMOTE_SERVER_IP}:${RSYNC_INSTANCES_BIN_PATH}/${REMOTE_SERVER_RSYNC_DIR}"
    - scp -i ${HOME}/.ssh/id_rsa -o "StrictHostKeyChecking no" $CI_PROJECT_DIR/opensilex-dev-tools/$CONFIGS_FILES_DIR_PATH/* $REMOTE_SERVER_RSYNC_ACCOUNT@$REMOTE_SERVER_IP:$RSYNC_INSTANCES_BIN_PATH/$REMOTE_SERVER_RSYNC_DIR
    - echo "Remove dependencies list cache"
    - ssh -i ${HOME}/.ssh/id_rsa -p22 $REMOTE_SERVER_RSYNC_ACCOUNT@$REMOTE_SERVER_IP "rm -f ${RSYNC_INSTANCES_BIN_PATH}/${REMOTE_SERVER_RSYNC_DIR}/.opensilex.dependencies"
    - echo "Check files"
    - echo ssh -i ${HOME}/.ssh/id_rsa -p22 $REMOTE_SERVER_RSYNC_ACCOUNT@$REMOTE_SERVER_IP "ls ${RSYNC_INSTANCES_BIN_PATH}/${REMOTE_SERVER_RSYNC_DIR};"
    - ssh -i ${HOME}/.ssh/id_rsa -p22 $REMOTE_SERVER_RSYNC_ACCOUNT@$REMOTE_SERVER_IP "ls ${RSYNC_INSTANCES_BIN_PATH}/${REMOTE_SERVER_RSYNC_DIR};"
    - |
      if [[ "$RESET_ONTOLOGIES" == "true" ]]; then
        echo "Reset ontologies ${OPENSILEX_JAVA_EXEC_OPTS} ${RSYNC_INSTANCES_BIN_PATH}/${REMOTE_SERVER_RSYNC_DIR}/opensilex.jar ${OPENSILEX_CONFIG_SERVER_OPTS} ${OPENSILEX_RESET_ONTOLOGIES_OPTS}";
        ssh -i ${HOME}/.ssh/id_rsa -p22 $REMOTE_SERVER_RSYNC_ACCOUNT@$REMOTE_SERVER_IP "cd ${RSYNC_INSTANCES_BIN_PATH}/${REMOTE_SERVER_RSYNC_DIR}; ${OPENSILEX_JAVA_EXEC_OPTS} opensilex.jar ${OPENSILEX_CONFIG_SERVER_OPTS} ${OPENSILEX_RESET_ONTOLOGIES_OPTS}";
      fi
    - echo "Restart server ${OPENSILEX_JAVA_EXEC_OPTS} ${RSYNC_INSTANCES_BIN_PATH}/$REMOTE_SERVER_RSYNC_DIR/opensilex.jar"
    - echo "Stop with options --adminPort=$OPENSILEX_JAR_ADMIN_PORT --host=$REMOTE_SERVER_IP ${OPENSILEX_STOP_SERVER_OPTS}"
    - ssh -i ${HOME}/.ssh/id_rsa -p22 $REMOTE_SERVER_RSYNC_ACCOUNT@$REMOTE_SERVER_IP "cd ${RSYNC_INSTANCES_BIN_PATH}/${REMOTE_SERVER_RSYNC_DIR}; ${OPENSILEX_JAVA_EXEC_OPTS} opensilex.jar ${OPENSILEX_STOP_SERVER_OPTS} --adminPort=$OPENSILEX_JAR_ADMIN_PORT --host=$REMOTE_SERVER_IP"
    - echo "Start with options --adminPort=$OPENSILEX_JAR_ADMIN_PORT --port=$OPENSILEX_JAR_PORT --host=$REMOTE_SERVER_IP ${OPENSILEX_START_SERVER_OPTS}"
    - ssh -i ${HOME}/.ssh/id_rsa -p22 $REMOTE_SERVER_RSYNC_ACCOUNT@$REMOTE_SERVER_IP "cd ${RSYNC_INSTANCES_BIN_PATH}/${REMOTE_SERVER_RSYNC_DIR}; ${OPENSILEX_JAVA_EXEC_OPTS} opensilex.jar ${OPENSILEX_START_SERVER_OPTS} --adminPort=$OPENSILEX_JAR_ADMIN_PORT --port=$OPENSILEX_JAR_PORT --host=$REMOTE_SERVER_IP"
    - AUTOGENERATE_ENVIRONMENT_URL="$REMOTE_SERVER_IP:$OPENSILEX_JAR_PORT"
    - echo "Deploy To $AUTOGENERATE_ENVIRONMENT_URL" # In script, get the environment URL.
    - echo "AUTOGENERATE_ENVIRONMENT_URL=$AUTOGENERATE_ENVIRONMENT_URL" >> deploy.env
  environment:
    name: "$CI_COMMIT_REF_NAME-test"
    url: http://$AUTOGENERATE_ENVIRONMENT_URL
  artifacts:
    reports:
      dotenv: deploy.env

# ########################
# ##  DEFAULT BUILD
# ########################

opensilex:build:
  <<: *build_template_with_opensilex
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == "master"

# Trigger pipeline for sixtine module deployment
trigger:sixtine:build:
  stage: deploy
  image: curlimages/curl
  script:
    - sleep 60
    - curl --request POST --form "token=$CI_JOB_TOKEN" --form "ref=master" --form "variables[COMMIT_SHA_OPENSILEX_DEV]=$CI_COMMIT_SHA" https://forgemia.inra.fr/api/v4/projects/1757/trigger/pipeline
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  needs:
    - job: "opensilex:build"

# Trigger pipeline for phis module deployment
trigger:phis:deploy:test:
  stage: deploy
  image: curlimages/curl
  script:
    - sleep 60
    - curl --request POST --form "variables[DEPLOY]=phis-test" --form "token=$CI_JOB_TOKEN" --form "ref=master" --form "variables[COMMIT_SHA_OPENSILEX_DEV]=$CI_COMMIT_SHA"  https://forgemia.inra.fr/api/v4/projects/403/trigger/pipeline
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  needs:
    - job: "opensilex:build"

# Trigger pipeline for data-analysis module deployment
trigger:dataanalysis:deploy:test:
  stage: deploy
  image: curlimages/curl
  script:
    - sleep 60
    - curl --request POST --form "token=$CI_JOB_TOKEN" --form "ref=master" --form "variables[COMMIT_SHA_OPENSILEX_DEV]=$CI_COMMIT_SHA" https://forgemia.inra.fr/api/v4/projects/2076/trigger/pipeline
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  needs:
    - job: "opensilex:build"

# Update nightly builds branch
update:nightly:builds:branch:
  stage: build
  script:
    - apt update && apt install -y git
    - git config --global user.name "anonymous"
    - git config --global user.email "anonymous@opensilex.org"
    - git remote set-url origin "https://oauth2:$GITLAB_USER_CI_PAT@forgemia.inra.fr/OpenSILEX/opensilex-dev.git"
    - if [  -z "`git show-ref refs/heads/nightly-builds`" ]; then  echo 'branch nightly-builds will be created!' &&  git checkout -b nightly-builds; else git checkout nightly-builds ;fi
    - git fetch origin
    - git reset --hard origin/master
    - git push -f origin nightly-builds
  rules:
    - if: $CI_COMMIT_BRANCH == "master"

########################
##  BUILD - TESTS WITH DIFFERENT MAVEN VERSIONS
########################

##  BUILD TEMPLATE
.test:build: &test_build_on_schedules
  <<: *cache_dependencies
  before_script:
    - if [ -z "$JAVA_VERSION" ]; then echo "Missing JAVA_VERSION variable"; exit 1; fi
    - if [ -z "$MVN_VERSION" ]; then echo "Missing MVN_VERSION variable"; exit 1; fi
    - echo "with_java $JAVA_VERSION and maven $MVN_VERSION with latest version of OpenSILEX/opensilex-dev"
  stage: build
  image: maven:$MVN_VERSION-jdk-$JAVA_VERSION
  script:
    - mvn clean install $MAVEN_CLI_OPTS -Drevision=$OPENSILEX_APP_REVISION
    - ls $OPENSILEX_BUILD_PATH/opensilex-release-$OPENSILEX_APP_REVISION
    - mv $OPENSILEX_BUILD_PATH/opensilex-release-$OPENSILEX_APP_REVISION $OPENSILEX_APP_REVISION
  rules:
    - if: $NIGHTLY_BUILD == "true"

##  BUILD VERSIONS # example https://gitlab.com/gitlab-org/gitlab-foss/issues/13755

.with_java8: &java8
  variables:
    JAVA_VERSION: 8

.with_java11: &java11
  variables:
    JAVA_VERSION: 11

.with_java13: &java13
  before_script:
    - yum install -y git
  variables:
    JAVA_VERSION: 13

.with_java14: &java14
  before_script:
    - yum install -y git
  variables:
    JAVA_VERSION: 14

test:build:java8:
  <<: *java8
  <<: *test_build_on_schedules

test:build:java11:
  <<: *java11
  <<: *test_build_on_schedules

test:build:java13:
  <<: *java13
  <<: *test_build_on_schedules

test:build:java14:
  <<: *java14
  <<: *test_build_on_schedules

########################
##  BUILD - GITLAB PAGES DOCS
########################

pages:
  <<: *test_build_on_schedules
  script:
    - ln -s $JAVA_HOME java.home
    - cd $CI_PROJECT_DIR/opensilex-swagger-codegen-maven-plugin
    - mvn install $MAVEN_CLI_OPTS
    - cd $CI_PROJECT_DIR
    - mvn install site $MAVEN_CLI_OPTS -Pwith-test-report -Pwith-security-check -DskipFrontBuild
    - mkdir public
    - mv $CI_PROJECT_DIR/opensilex-doc/src/main/resources/generated/* public
  artifacts:
    paths:
      - public
  rules:
    - if: $NIGHTLY_BUILD == "true"

# ##########################################
# ##  BUILD & DEPLOY FOR MISTEA TEAM
# ##########################################

###################################
##  ALICE-TEST-SNAPSHOT-DEPLOYMENT
###################################

alice:build:
  <<: *build_template_with_opensilex
  rules:
    - if: $CI_COMMIT_BRANCH == "alice"

test:alice:deploy:
  <<: *deploy_opensilex_before_script
  <<: *deploy_opensilex_template
  variables:
    CONFIGS_FILES_DIR_PATH: "${DEV_TOOLS_REPO_CONF_FILES_PATH}/mistea/alice"
    INSTANCE_CONFIGURATION_FILE_NAME: "phis.test.yml"
    OPENSILEX_JAR_ADMIN_PORT: 4084
    OPENSILEX_JAR_PORT: 8084
    REMOTE_SERVER_RSYNC_ACCOUNT: "$REMOTE_PHIS_RSYNC_ACCOUNT"
    REMOTE_SERVER_IP: $REMOTE_TEST_SERVER_IP
    REMOTE_SERVER_RSYNC_DIR: "mistea/alice"
    REMOTE_SERVER_SSH_KEY: "$TEST_SSH_PRIVATE_KEY"
  rules:
    - if: $CI_COMMIT_BRANCH == "alice"
      when: on_success
  needs:
    - alice:build

###################################
##  EQUIPEMENT-TEST-SNAPSHOT-DEPLOYMENT
###################################

equipements:build:
  <<: *build_template_with_opensilex
  rules:
    - if: $CI_COMMIT_BRANCH == "equipements"

test:equipements:deploy:
  <<: *deploy_opensilex_before_script
  <<: *deploy_opensilex_template
  variables:
    CONFIGS_FILES_DIR_PATH: "${DEV_TOOLS_REPO_CONF_FILES_PATH}/mistea/sammy"
    INSTANCE_CONFIGURATION_FILE_NAME: "phis.test.yml"
    OPENSILEX_JAR_ADMIN_PORT: 4085
    OPENSILEX_JAR_PORT: 8085
    REMOTE_SERVER_RSYNC_ACCOUNT: "$REMOTE_PHIS_RSYNC_ACCOUNT"
    REMOTE_SERVER_IP: "$REMOTE_TEST_SERVER_IP"
    REMOTE_SERVER_RSYNC_DIR: "mistea/sammy"
    REMOTE_SERVER_SSH_KEY: "$TEST_SSH_PRIVATE_KEY"
  rules:
    - if: $CI_COMMIT_BRANCH == "equipements"
      when: on_success
  needs:
    - equipements:build

###################################
##  ARNAUD-TEST-BUILD-DEPLOYMENT
###################################

arnaud:build:
  <<: *build_template_with_opensilex
  rules:
    - if: $CI_COMMIT_BRANCH == "arnaud"

test:arnaud:deploy:
  <<: *deploy_opensilex_before_script
  <<: *deploy_opensilex_template
  variables:
    CONFIGS_FILES_DIR_PATH: "${DEV_TOOLS_REPO_CONF_FILES_PATH}/mistea/arnaud"
    INSTANCE_CONFIGURATION_FILE_NAME: "phis.test.yml"
    OPENSILEX_JAR_ADMIN_PORT: 4086
    OPENSILEX_JAR_PORT: 8086
    REMOTE_SERVER_RSYNC_ACCOUNT: "$REMOTE_PHIS_RSYNC_ACCOUNT"
    REMOTE_SERVER_IP: "$REMOTE_TEST_SERVER_IP"
    REMOTE_SERVER_RSYNC_DIR: "mistea/arnaud"
    REMOTE_SERVER_SSH_KEY: "$TEST_SSH_PRIVATE_KEY"
  rules:
    - if: $CI_COMMIT_BRANCH == "arnaud"
      when: on_success
  needs:
    - arnaud:build

###################################
##  HAMZA-TEST-BUILD-DEPLOYMENT
###################################

hamza:build:
  <<: *build_template_with_opensilex
  rules:
    - if: $CI_COMMIT_BRANCH == "hamza"

test:hamza:deploy:
  <<: *deploy_opensilex_before_script
  <<: *deploy_opensilex_template
  variables:
    CONFIGS_FILES_DIR_PATH: "${DEV_TOOLS_REPO_CONF_FILES_PATH}/mistea/hamza"
    INSTANCE_CONFIGURATION_FILE_NAME: "phis.test.yml"
    OPENSILEX_JAR_ADMIN_PORT: 4083
    OPENSILEX_JAR_PORT: 8083
    REMOTE_SERVER_RSYNC_ACCOUNT: "$REMOTE_PHIS_RSYNC_ACCOUNT"
    REMOTE_SERVER_IP: "$REMOTE_TEST_SERVER_IP"
    REMOTE_SERVER_RSYNC_DIR: "mistea/hamza"
    REMOTE_SERVER_SSH_KEY: "$TEST_SSH_PRIVATE_KEY"
  rules:
    - if: $CI_COMMIT_BRANCH == "hamza"
      when: on_success
  needs:
    - hamza:build

###################################
##  cheimae-TEST-BUILD-DEPLOYMENT
###################################

cheimae:build:
  <<: *build_template_with_opensilex
  rules:
    - if: $CI_COMMIT_BRANCH == "cheimae"

test:cheimae:deploy:
  <<: *deploy_opensilex_before_script
  <<: *deploy_opensilex_template
  variables:
    CONFIGS_FILES_DIR_PATH: "${DEV_TOOLS_REPO_CONF_FILES_PATH}/mistea/cheimae"
    INSTANCE_CONFIGURATION_FILE_NAME: "phis.test.yml"
    OPENSILEX_JAR_ADMIN_PORT: 4096
    OPENSILEX_JAR_PORT: 8096
    REMOTE_SERVER_RSYNC_ACCOUNT: "$REMOTE_PHIS_RSYNC_ACCOUNT"
    REMOTE_SERVER_IP: "$REMOTE_TEST_SERVER_IP"
    REMOTE_SERVER_RSYNC_DIR: "mistea/cheimae"
    REMOTE_SERVER_SSH_KEY: "$TEST_SSH_PRIVATE_KEY"
  rules:
    - if: $CI_COMMIT_BRANCH == "cheimae"
      when: on_success
  needs:
    - cheimae:build

###################################
##  JULIEN-TEST-BUILD-DEPLOYMENT
###################################

julien:build:
  <<: *build_template_with_opensilex
  rules:
    - if: $CI_COMMIT_BRANCH == "julien"

test:julien:deploy:
  <<: *deploy_opensilex_before_script
  <<: *deploy_opensilex_template
  variables:
    CONFIGS_FILES_DIR_PATH: "${DEV_TOOLS_REPO_CONF_FILES_PATH}/mistea/julien"
    INSTANCE_CONFIGURATION_FILE_NAME: "phis.test.yml"
    OPENSILEX_JAR_ADMIN_PORT: 4087
    OPENSILEX_JAR_PORT: 8087
    REMOTE_SERVER_RSYNC_ACCOUNT: "$REMOTE_PHIS_RSYNC_ACCOUNT"
    REMOTE_SERVER_IP: "$REMOTE_TEST_SERVER_IP"
    REMOTE_SERVER_RSYNC_DIR: "mistea/julien"
    REMOTE_SERVER_SSH_KEY: "$TEST_SSH_PRIVATE_KEY"
  rules:
    - if: $CI_COMMIT_BRANCH == "julien"
      when: on_success
  needs:
    - julien:build

###################################
##  RENAUD-TEST-BUILD-DEPLOYMENT
###################################

renaud:build:
  <<: *build_template_with_opensilex
  rules:
    - if: $CI_COMMIT_BRANCH == "renaud"

test:renaud:deploy:
  <<: *deploy_opensilex_before_script
  <<: *deploy_opensilex_template
  variables:
    CONFIGS_FILES_DIR_PATH: "${DEV_TOOLS_REPO_CONF_FILES_PATH}/mistea/renaud"
    INSTANCE_CONFIGURATION_FILE_NAME: "phis.test.yml"
    OPENSILEX_JAR_ADMIN_PORT: 4088
    OPENSILEX_JAR_PORT: 8088
    REMOTE_SERVER_RSYNC_ACCOUNT: "$REMOTE_PHIS_RSYNC_ACCOUNT"
    REMOTE_SERVER_IP: "$REMOTE_TEST_SERVER_IP"
    REMOTE_SERVER_RSYNC_DIR: "mistea/renaud"
    REMOTE_SERVER_SSH_KEY: "$TEST_SSH_PRIVATE_KEY"
  rules:
    - if: $CI_COMMIT_BRANCH == "renaud"
      when: on_success
  needs:
    - renaud:build

###################################
##  VINCENT-TEST-BUILD-DEPLOYMENT
###################################

vincent:build:
  <<: *build_template_with_opensilex
  rules:
    - if: $CI_COMMIT_BRANCH == "vincent"

test:vincent:deploy:
  <<: *deploy_opensilex_before_script
  <<: *deploy_opensilex_template
  variables:
    CONFIGS_FILES_DIR_PATH: "${DEV_TOOLS_REPO_CONF_FILES_PATH}/mistea/vincent"
    INSTANCE_CONFIGURATION_FILE_NAME: "phis.test.yml"
    OPENSILEX_JAR_ADMIN_PORT: 4089
    OPENSILEX_JAR_PORT: 8089
    REMOTE_SERVER_RSYNC_ACCOUNT: "$REMOTE_PHIS_RSYNC_ACCOUNT"
    REMOTE_SERVER_IP: "$REMOTE_TEST_SERVER_IP"
    REMOTE_SERVER_RSYNC_DIR: "mistea/vincent"
    REMOTE_SERVER_SSH_KEY: "$TEST_SSH_PRIVATE_KEY"
  rules:
    - if: $CI_COMMIT_BRANCH == "vincent"
      when: on_success
  needs:
    - vincent:build

###################################
##  JEAN-PHILIPPE-TEST-BUILD-DEPLOYMENT
###################################

jeanphilippe:build:
  <<: *build_template_with_opensilex
  rules:
    - if: $CI_COMMIT_BRANCH == "jean-philippe"

test:jeanphilippe:deploy:
  <<: *deploy_opensilex_before_script
  <<: *deploy_opensilex_template
  variables:
    CONFIGS_FILES_DIR_PATH: "${DEV_TOOLS_REPO_CONF_FILES_PATH}/mistea/jean-philippe"
    INSTANCE_CONFIGURATION_FILE_NAME: "phis.test.yml"
    OPENSILEX_JAR_ADMIN_PORT: 4092
    OPENSILEX_JAR_PORT: 8092
    REMOTE_SERVER_RSYNC_ACCOUNT: "$REMOTE_PHIS_RSYNC_ACCOUNT"
    REMOTE_SERVER_IP: "$REMOTE_TEST_SERVER_IP"
    REMOTE_SERVER_RSYNC_DIR: "mistea/jean-philippe"
    REMOTE_SERVER_SSH_KEY: "$TEST_SSH_PRIVATE_KEY"
  rules:
    - if: $CI_COMMIT_BRANCH == "jean-philippe"
      when: on_success
  needs:
    - jeanphilippe:build

###################################
##  EMILIE-TEST-SNAPSHOT-DEPLOYMENT
###################################

emilie:build:
  <<: *build_template_with_opensilex
  rules:
    - if: $CI_COMMIT_BRANCH == "emilie"

test:emilie:deploy:
  <<: *deploy_opensilex_before_script
  <<: *deploy_opensilex_template
  variables:
    CONFIGS_FILES_DIR_PATH: "${DEV_TOOLS_REPO_CONF_FILES_PATH}/mistea/emilie"
    INSTANCE_CONFIGURATION_FILE_NAME: "phis.test.yml"
    OPENSILEX_JAR_ADMIN_PORT: 4094
    OPENSILEX_JAR_PORT: 8094
    REMOTE_SERVER_RSYNC_ACCOUNT: "$REMOTE_PHIS_RSYNC_ACCOUNT"
    REMOTE_SERVER_IP: $REMOTE_TEST_SERVER_IP
    REMOTE_SERVER_RSYNC_DIR: "mistea/emilie"
    REMOTE_SERVER_SSH_KEY: "$TEST_SSH_PRIVATE_KEY"
  rules:
    - if: $CI_COMMIT_BRANCH == "emilie"
      when: on_success
  needs:
    - emilie:build

# ##########################################
# ##  BUILD & DEPLOY FOR PARTNERS TEAMS
# ##########################################

###################################
##  EPHESIA-TEST-BUILD-DEPLOYMENT
###################################

ephesia:build:
  <<: *build_template_with_opensilex
  rules:
    - if: $CI_COMMIT_BRANCH == "ephesia"

test:ephesia:deploy:
  <<: *deploy_opensilex_before_script
  <<: *deploy_opensilex_template
  variables:
    CONFIGS_FILES_DIR_PATH: "${DEV_TOOLS_REPO_CONF_FILES_PATH}/mistea/ephesia"
    INSTANCE_CONFIGURATION_FILE_NAME: "phis.test.yml"
    OPENSILEX_JAR_ADMIN_PORT: 4090
    OPENSILEX_JAR_PORT: 8090
    REMOTE_SERVER_RSYNC_ACCOUNT: "$REMOTE_PHIS_RSYNC_ACCOUNT"
    REMOTE_SERVER_IP: "$REMOTE_TEST_SERVER_IP"
    REMOTE_SERVER_RSYNC_DIR: "mistea/ephesia"
    REMOTE_SERVER_SSH_KEY: "$TEST_SSH_PRIVATE_KEY"
  rules:
    - if: $CI_COMMIT_BRANCH == "ephesia"
      when: on_success
  needs:
    - ephesia:build
