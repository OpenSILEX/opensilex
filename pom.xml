<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
******************************************************************************
 OpenSILEX - Licence AGPL V3.0 - https://www.gnu.org/licenses/agpl-3.0.en.html
 Copyright Â© INRA 2019
 Contact: vincent.migot@inra.fr, anne.tireau@inra.fr, pascal.neveu@inra.fr
 
 OpenSilex Development Environment main pom.xml
 If you add a new module, add it in the <modules> section and
 in the <dependencies> section in order to make it work.
******************************************************************************
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>opensilex</artifactId>
    <packaging>pom</packaging>
    
    <name>opensilex</name>
      
    <url>https://www.opensilex.org/</url>
      
    <parent>
        <groupId>org.opensilex</groupId>
        <artifactId>opensilex-parent</artifactId>
        <version>${revision}</version>
        <relativePath>opensilex-parent/pom.xml</relativePath>
    </parent>
      
    <properties>
        <skipFrontBuild>true</skipFrontBuild>
        <skipTypeScriptLibBuild>true</skipTypeScriptLibBuild>
    </properties>
      
    <modules>
        <!-- Main OpenSilex modules -->
        <module>opensilex-parent</module>
        <module>opensilex-main</module>
        <module>opensilex-sparql</module>
        <module>opensilex-nosql</module>
        <module>opensilex-fs</module>
        <module>opensilex-security</module>
        <module>opensilex-module</module>
        <module>opensilex-core</module>
        <module>opensilex-front</module>
        

        <!-- PHIS legacy module-->
        <module>opensilex-phis</module>

        <!-- BRAPI module-->
        <module>opensilex-brapi</module>
        
        <!-- Extension modules -->
        <!--<module>inrae-sixtine</module>-->
            
        <!-- Development module -->
        <module>opensilex-dev-tools</module>
        
        <!-- Release module -->
        <module>opensilex-release</module>
         
        <!-- Maven Plugin module -->
        <module>opensilex-swagger-codegen-maven-plugin</module>
        
        <!-- Documentation module -->
        <module>opensilex-doc</module>
        <module>opensilex-mobile</module>
        <module>opensilex-migration</module>
    </modules>
    
    <dependencies>
        <!-- Plugin dependencies -->
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-swagger-codegen-maven-plugin</artifactId>
            <version>${revision}</version>
        </dependency>
            
        <!-- OpenSilex build-in modules dependencies-->
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-main</artifactId>
            <version>${revision}</version>
        </dependency>
        
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-sparql</artifactId>
            <version>${revision}</version>
        </dependency>
        
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-nosql</artifactId>
            <version>${revision}</version>
        </dependency>
                
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-fs</artifactId>
            <version>${revision}</version>
        </dependency>
        
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-security</artifactId>
            <version>${revision}</version>
        </dependency>
        
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-core</artifactId>
            <version>${revision}</version>
        </dependency>
            
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-front</artifactId>
            <version>${revision}</version>
        </dependency>
        
        <!--PHIS legacy dependency-->
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-phis</artifactId>
            <version>${revision}</version>
        </dependency>

        <!-- BRAPI dependency --> 
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-brapi</artifactId>
            <version>${revision}</version>
        </dependency>
        
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-mobile</artifactId>
            <version>${revision}</version>
        </dependency>
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-migration</artifactId>
            <version>${revision}</version>
        </dependency>

        
        <!--Other extension modules must be declared as dependencies-->
<!--        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>inrae-sixtine</artifactId>
            <version>${revision}</version>
        </dependency> -->
    </dependencies>
      
    <build>
        <plugins>
            <!-- Documentation site generation plugin -->
            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <version>${maven.site.plugin.version}</version>
                <inherited>false</inherited>
                
                <configuration>
                    <outputDirectory>${generated.doc.site.directory}</outputDirectory>
                </configuration>
            </plugin>
        </plugins>
    </build>
              
    <reporting>
        <plugins>
            <!-- Add Javadoc generation plugin during "site" phase -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
                  
            <!-- Add project sources link and references in documentation during "site" phase -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <javadocDir>${generated.doc.site.directory}/apidocs</javadocDir>
                </configuration>
            </plugin>
              
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven.pmd.plugin.version}</version>
                <configuration>
                    <linkXref>true</linkXref>
                    <sourceEncoding>utf-8</sourceEncoding>
                    <minimumTokens>100</minimumTokens>
                    <targetJdk>${java.compiler.version}</targetJdk>
                    <aggregate>true</aggregate>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <outputFile>./${generated.doc.site.directory}/${project.name}/checkstyle-result.xml</outputFile>
                    <outputDirectory>./${generated.doc.site.directory}/${project.name}/checkstyle/</outputDirectory>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle-aggregate</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
    
    <profiles>
        <!-- Profile which enable Jacoco Code coverage -->
        <profile>
            <id>with-test-report</id>
            <build>
                <plugins>
                    <!--Code coverage @see https://www.eclemma.org/jacoco/trunk/index.html -->
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco.maven.plugin.version}</version>
                        <inherited>false</inherited>
                        <configuration>
                            <excludes>
                                <exclude>**/*.war</exclude>
                            </excludes>
                            <outputDirectory>${generated.doc.site.directory}/jacoco/</outputDirectory>
                        </configuration>
                                    
                        <executions>
                            <execution>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <propertyName>surefireArgLine</propertyName>
                                </configuration>
                            </execution>
                            <execution>
                                <id>merge</id>
                                <goals>
                                    <goal>merge</goal>
                                </goals>
                                <configuration>
                                    <fileSets>
                                        <fileSet implementation="org.apache.maven.shared.model.fileset.FileSet">
                                            <directory>${maven.multiModuleProjectDirectory}</directory>
                                            <includes>
                                                <include>**/jacoco.exec</include>
                                            </includes>
                                        </fileSet>
                                    </fileSets>
                                    <destFile>${project.build.directory}/jacoco.exec</destFile>
                                </configuration>
                            </execution>
                            <!-- Create aggregate code coverage report accross all Maven modules -->
                            <execution>
                                <id>jacoco report aggregate</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>report-aggregate</goal>
                                </goals>
                                <configuration>
                                    <dataFileIncludes>**/jacoco.exec</dataFileIncludes>
                                    <includes>
                                        <!--Analyze class files only to exclude shaded agent JAR from report--> 
                                        <include>**/*.class</include>
                                    </includes>
                                    <outputDirectory>${generated.doc.site.directory}/jacoco/</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    
                </plugins>
            </build>
                  
            <reporting>
                <plugins>
                    <!-- Add project sources link and references in documentation during "site" phase -->
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco.maven.plugin.version}</version>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>report-aggregate</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
        
        <!-- Profile which enable OWASP security check for libraries, could be VERY slow -->
        <profile>
            <id>with-security-check</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <executions>
                            <execution>
                                <phase>pre-site</phase>
                                <goals>
                                    <goal>aggregate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>aggregate</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
    </profiles>
</project>
